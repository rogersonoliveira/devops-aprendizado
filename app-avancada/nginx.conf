user appuser;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_conn_zone $binary_remote_addr zone=conn:10m;

    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # Security
        server_tokens off;
        
        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        limit_conn conn 10;

        # Main application
        location / {
            try_files $uri $uri/ /index.html;
            
            # Cache static files
            location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg)$ {
                expires 1M;
                add_header Cache-Control "public, immutable";
            }
        }

        # Health check endpoint
        location /health {
            try_files /health /health-check.html =404;
            access_log off;
        }

        # Metrics endpoint (simulado)
        location /metrics {
            return 200 '# HELP http_requests_total Total HTTP requests
# TYPE http_requests_total counter
http_requests_total{method="GET",status="200"} 1027
http_requests_total{method="POST",status="200"} 3
http_requests_total{method="GET",status="404"} 2

# HELP memory_usage_bytes Memory usage in bytes  
# TYPE memory_usage_bytes gauge
memory_usage_bytes 268435456

# HELP cpu_usage_percent CPU usage percentage
# TYPE cpu_usage_percent gauge  
cpu_usage_percent 0.23';
            add_header Content-Type text/plain;
        }

        # API endpoints (simulados)
        location /api/ {
            add_header Content-Type application/json;
            return 200 '{"status": "ok", "version": "2.0.0", "timestamp": "$time_iso8601"}';
        }

        # Security: Block common attack patterns
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            return 500 '{"error": "Internal Server Error", "timestamp": "$time_iso8601"}';
            add_header Content-Type application/json;
        }
    }
}